DROP TABLE REQUEST;
DROP TABLE DRIVER_CAR;
DROP TABLE INSURANCE;
DROP TABLE CAR;
DROP TABLE MOBILE_NUMBERS;
DROP TABLE DRIVER;
DROP TABLE APP_USER;
DROP TABLE LOCATION;

--LOCATION
CREATE TABLE LOCATION (
	LOCATION_ID NUMBER NOT NULL,
	STREET VARCHAR2(40),
	CITY VARCHAR2(40) NOT NULL,
	POSTAL_CODE VARCHAR2(10),
	LONGITUDE Point NOT NULL,
	LATITUDE Point NOT NULL,
        CONSTRAINT LOCATION_PK PRIMARY KEY(LOCATION_ID)
);

--USER TABLE
CREATE TABLE APP_USER (
	USER_ID INTEGER NOT NULL,
	FIRST_NAME VARCHAR2(40) NOT NULL,
	MIDDLE_NAME VARCHAR2(40),
	LAST_NAME VARCHAR2(40),
	USERNAME VARCHAR2(40) NOT NULL UNIQUE,
	PASSWORD VARCHAR2(40) NOT NULL CHECK(LENGTH(PASSWORD) > 3 AND LENGTH(PASSWORD)<=8),
	EMAIL VARCHAR2(50) UNIQUE NOT NULL CHECK(EMAIL LIKE '%_@_%._%'),
	RATING NUMBER(3, 2) NOT NULL,//?????
	PHOTO BLOB,
	DATE_OF_BIRTH DATE DEFAULT SYSDATE NOT NULL,
	LOCATION_ID INTEGER NOT NULL,
        CONSTRAINT USER_PK PRIMARY KEY(USER_ID),
	CONSTRAINT APP_USER_FK FOREIGN KEY(LOCATION_ID) REFERENCES LOCATION(LOCATION_ID) ON DELETE CASCADE
);

--DRIVER TABLE

CREATE TABLE DRIVER (
	DRIVER_ID INTEGER NOT NULL,
	FIRST_NAME VARCHAR2(40) NOT NULL,
	MIDDLE_NAME VARCHAR2(40),
	LAST_NAME VARCHAR2(40),
	USERNAME VARCHAR2(40) NOT NULL UNIQUE,
	PASSWORD VARCHAR2(40) NOT NULL CHECK(LENGTH(PASSWORD) > 3 AND LENGTH(PASSWORD)<=8),
	EMAIL VARCHAR2(50) UNIQUE NOT NULL CHECK(EMAIL LIKE '%_@_%._%'),
	RATING NUMBER(3, 2) NOT NULL,
	PHOTO BLOB,
	DATE_OF_BIRTH DATE DEFAULT SYSDATE NOT NULL,
	LOCATION_ID INTEGER NOT NULL,
        CONSTRAINT DRIVER_PK PRIMARY KEY(DRIVER_ID),
	CONSTRAINT DRIVER_FK FOREIGN KEY(LOCATION_ID) REFERENCES LOCATION(LOCATION_ID) ON DELETE CASCADE
);

CREATE TABLE MOBILE_NUMBERS(
	MOBILE_NUMBER CHAR(11) CONSTRAINT MOB_NUM_PK PRIMARY KEY CHECK(LENGTH(MOBILE_NUMBER) = 11),
	USER_ID INTEGER NOT NULL,
	DRIVER_ID INTEGER NOT NULL,
	CONSTRAINT MOB_NUM_FK_USER FOREIGN KEY(USER_ID) REFERENCES APP_USER(USER_ID) ON DELETE CASCADE,
	CONSTRAINT MOB_NUM_FK_DRIVER FOREIGN KEY(DRIVER_ID) REFERENCES DRIVER(DRIVER_ID) ON DELETE CASCADE
);

--CAR TABLE
CREATE TABLE CAR(
	NAME_PLATE VARCHAR2(30) NOT NULL,
	MODEL VARCHAR2(40) NOT NULL,
	COLOR VARCHAR2(30) NOT NULL,
        CONSTRAINT CAR_PK PRIMARY KEY(NAME_PLATE),
);

--INSURANCE TABLE

CREATE TABLE INSURANCE(
	INSURANCE_ID INTEGER NOT NULL, 
	INS_START_DATE DATE DEFAULT SYSDATE NOT NULL,
	INS_END_DATE DATE NOT NULL,
	INS_TYPE VARCHAR2(20) NOT NULL,
	NAME_PLATE VARCHAR2(30) NOT NULL,
        CONSTRAINT INSURANCE_PK PRIMARY KEY(INSURANCE_ID),
        CONSTRAINT CHECK_DATES CHECK(INS_END_DATE > INS_START_DATE),
	CONSTRAINT INSURANCE_FK FOREIGN KEY(NAME_PLATE) REFERENCES CAR(NAME_PLATE) ON DELETE CASCADE
);

--CAR_DRIVER RELATIONSHIP

CREATE TABLE DRIVER_CAR(
	NAME_PLATE VARCHAR2(30) NOT NULL,
	DRIVER_ID INTEGER NOT NULL,
	CONSTRAINT DRIVER_CAR_FK_CAR FOREIGN KEY(NAME_PLATE) REFERENCES CAR(NAME_PLATE) ON DELETE CASCADE,
	CONSTRAINT DRIVER_CAR_FK_DRIVER FOREIGN KEY(DRIVER_ID) REFERENCES DRIVER(DRIVER_ID) ON DELETE CASCADE,
	CONSTRAINT DRIVER_CAR_PK PRIMARY KEY(NAME_PLATE, DRIVER_ID)
);

-- REQUEST TABLE

CREATE TABLE REQUEST(
	REQUEST_ID INTEGER NOT NULL,
	START_TIME TIMESTAMP NOT NULL,
	END_TIME TIMESTAMP NOT NULL,
	PICK_UP_POINT INTEGER NOT NULL,
	DESTINATION INTEGER NOT NULL,
	APPROX_FARE INTEGER NOT NULL,
	STATUS VARCHAR2(10),
	USER_ID INTEGER NOT NULL,
	DRIVER_ID INTEGER NOT NULL,
        CONSTRAINT REQUEST_PK PRIMARY KEY(REQUEST_ID),
	CONSTRAINT REQUEST_FK_PUP FOREIGN KEY(PICK_UP_POINT) REFERENCES LOCATION(LOCATION_ID) ON DELETE CASCADE,
	CONSTRAINT REQUEST_FK_DEST FOREIGN KEY(DESTINATION) REFERENCES LOCATION(LOCATION_ID) ON DELETE CASCADE,
	CONSTRAINT REQUEST_FK_USER FOREIGN KEY(USER_ID) REFERENCES APP_USER(USER_ID) ON DELETE CASCADE,
	CONSTRAINT REQUEST_FK_DRIVER FOREIGN KEY(DRIVER_ID) REFERENCES DRIVER(DRIVER_ID) ON DELETE CASCADE
);


